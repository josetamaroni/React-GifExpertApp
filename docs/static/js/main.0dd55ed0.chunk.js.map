{"version":3,"sources":["components/AppCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AppCategory","categorias","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","includes","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","setCategoria","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,WAAWC,EAAmB,EAAnBA,cAAmB,EAEnBC,mBAAS,IAFU,mBAEhDC,EAFgD,KAEpCC,EAFoC,KAkBvD,OACI,sBAAKC,UAAU,YAAf,UACI,8CACA,uBAAMC,SAdI,SAACC,GACfA,EAAEC,iBAEER,EAAWS,SAASN,EAAWO,SAE/BP,EAAWO,OAAOC,OAAS,IAC3BV,GAAe,SAAAW,GAAI,OAAKT,GAAL,mBAAmBS,OACtCR,EAAc,MAOd,UACI,4CACA,uBACIS,KAAK,OACLC,MAASX,EACTY,SAtBI,SAACR,GACjBH,EAAcG,EAAES,OAAOF,iB,QCNlBG,EAAc,SAAC,GAAyB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAEtC,OACI,sBAAKf,UAAU,4DAAf,UACI,qBAAKgB,IAAKD,EAAKE,IAAKH,IACpB,kCAAMA,EAAN,W,uBCNCI,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbL,EAFa,iDAEoCM,UAAUF,GAF9C,gEAGAG,MAAOP,GAHP,cAGbQ,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAKa,EAAIC,OAAOC,iBAAiBf,QAVtB,kBAcZW,GAdY,4CAAH,sDCGPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAZAC,qBAAW,WACPjB,EAASC,GACRiB,MAAM,SAAAC,GAEHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAIlB,CAACb,IAEGc,EDjB0BK,CAAanB,GAAjCU,EAHwB,EAG7BJ,KAAaO,EAHgB,EAGhBA,QAErB,OACI,qCACA,qBAAIhC,UAAU,oCAAd,cAAqDmB,EAArD,OACEa,GAAW,mBAAGhC,UAAU,mCAAb,yBACb,qBAAKA,UAAU,YAAf,SAEQ6B,EAAOF,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAEEA,GADAA,EAAIf,aEbpB0B,EAAe,WAAM,MAGK1C,mBAAS,CAAC,cAHf,mBAGvBF,EAHuB,KAGX6C,EAHW,KAK9B,OACI,qCACI,cAAC,EAAD,CAAa5C,cAAgB4C,EAAe7C,WAAYA,IACxD,uBAEIA,EAAWgC,KAAK,SAAAc,GAAG,OACf,cAAC,EAAD,CAEItB,SAAUsB,GADLA,U,MCT7BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0dd55ed0.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AppCategory = ({categorias,setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const inputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const btnSubmit = (e) => {\r\n        e.preventDefault();\r\n        // BUSCO DENTRO DE LAS CATEGORIAS SI EXISTE Y NO DEVUELVO NADA\r\n        if( categorias.includes(inputValue.trim()) ) return;\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [inputValue,...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form_form\">\r\n            <h2>GifExpertApp</h2>\r\n            <form onSubmit={ btnSubmit }>\r\n                <span>Search: </span>\r\n                <input \r\n                    type='text'\r\n                    value= { inputValue }\r\n                    onChange={ inputChange }\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAppCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slower 5s\">\r\n            <img src={url} alt={title} />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=100&api_key=kVDysAzfApLqZDIzJh0tt7KuRSTXR7zI`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n    \r\n    // hook custom para mostrar un loading mientras se carga las imagenes\r\n    const { data:images, loading } = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>  \r\n        { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n        <div className='card-grid'>\r\n            {\r\n                images.map( img => { \r\n                    return <GifGridItem \r\n                        key={img.id} \r\n                        { ...img } \r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    // EJECUTA UNA SOLA VEZ LA FUNCION\r\n    useEffect( () => {\r\n        getGifs( category )\r\n        .then( imgs => {\r\n                \r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n\r\n        })\r\n    }, [category])\r\n\r\n    return state; // { data: [], loading: true}\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AppCategory,GifGrid } from './components';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categorias, setCategoria] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <AppCategory setCategories={ setCategoria } categorias={categorias}/>\r\n            <hr/>\r\n            {\r\n                categorias.map( cat => (\r\n                    <GifGrid \r\n                        key={cat}\r\n                        category={cat} \r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n// INICIAR: npm start\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}